{
  "erfc": "1 swap erf -",
  "acosh": "dup dup * -- sqrt + ln",
  "cosh": "exp dup inv + 2 /",
  "sinh": "exp dup inv - 2 /",
  "tanh": "2 * exp pred swap ++ /",
  "atanh": "1 swap dup [ + 1 ] dip - / ln 0.5 *",
  "log": "ln ln10 /",
  "~!": "++ gamma",
  "c!": "pred [ count ] dip [ * ] swap times",
  "r!": "dup 0 = [ drop 1 ] [ pred 'r!' eval * ] branch",
  "!": "dup integer? [ r! ] [ ~! ] branch",
  "npr": "[ [ ! ] keep ] dip - ! /",
  "ncr": "[ npr ] keep ! / round",
  "--": "1 -",
  "++": "1 +",
  "+-": "[ + ] [ - ] bi2",
  "+-": "[ - ] [ + ] bi2",
  "neg": "0 swap -",
  "pred": "dup --",
  "succ": "dup ++",
  "^^^": "-- dup [ [ dup ] swap times [ ^^ ] ] dip times",
  "^^": "-- dup [ [ dup ] swap times [ ^ ] ] dip times",
  "pow": "-- dup [ [ dup ] swap times [ * ] ] dip times",
  "mul": "-- dup [ [ dup ] swap times [ + ] ] dip times",
  "toradians": "radians *",
  "todegrees": "radians /",
  "inv": "1 swap /",
  "integer?": "dup [ floor = ] [ im 0 = ] bi *",
  "positive?": "0 >",
  "negitive?": "0 <",
  "zero?": "0 =",
  "divisor?": "% zero?",
  "even?": "2 divisor?",
  "odd?": "even? not",
  "simple?": "[ even? ] [ 3 divisor? ] [ 5 divisor? ] tri + +",
  "sq": "dup *",
  "sum-of-squares": "0 [ sq + ] reduce",
  "square-of-sum": "sum sq"
}
