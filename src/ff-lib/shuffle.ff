/**
 * # Mathematics lib
 * Many words derived from (Joy)[http://tunes.org/~iepos/joy.html] and Factor(http://factorcode.org/).
 */

core: using

2drop: [ drop drop ] ;

m: [ dup eval ] ;           // [a] -> [a] a

2dup: [ over over ] ;       // [b] [a] -> [b] [a] [b] [a]

keep2: [ q< 2dup q> dive ] ;  // [c] [b] [a] -> [c] [b] a [c] [b]   (aka 2keep)


dropd: [ q< drop q> ] ;   // [b] [a] -> [a]          (aka nip)
nip: [ swap drop ] ;        // [b] [a] -> [a]
tuck: [ swap over ] ;       // [b] [a] -> [a] [b] [a]

overd: [ q< over q> ] ;   // [c] [b] [a] -> [c] [b] [c] [a]
pick: [ overd swap ] ;      // [c] [b] [a] -> [c] [b] [a] [c]
3dup: [ pick pick pick ] ;  // [c] [b] [a] -> [c] [b] [a] [c] [b] [a]
swapd: [ q< swap q> ] ;   // [c] [b] [a] -> [b] [c] [a]
dig: [ swapd swap ] ;        // [c] [b] [a] -> [b] [a] [c]
rolldown: [ swapd swap ] ;  // [c] [b] [a] -> [b] [a] [c] (aka dig)
bury: [ swap swapd ] ;      // [c] [b] [a] -> [a] [c] [b]
flip: [ swapd bury ] ;      // [c] [b] [a] -> [a] [b] [c]
rot: [ bury swap ] ;        // [c] [b] [a] -> [a] [b] [c]

repn: [ runn drop ] ;

dive: [ swap dipd ] ;       // [c] [b] [a] -> a [c] [b]   (aka dip2)
dip2: [ swap dipd ] ; // [c] [b] [a] -> a [c] [b]

bi2: [ q< keep2 q> eval ] ;  // [d] [c] [b] [a] -> [d] [c] b [d] [c] a
bi*: [ dipd eval ] ;        // [d] [c] [b] [a] -> [d] b [c] a
bi@: [ dup bi* ] ;          // [c] [b] [a] -> [c] a [c] a
tri: [ q< sipd sip q> eval ] ;   // [d] [c] [b] [a] -> [d] c [d] b [d] a


