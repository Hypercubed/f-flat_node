/**
 * # Module loader
 */

/**
 * ## `include`
 * Reads a file onto the stack as a string and evaluates the content
 */
include: [ resolve read eval ] ;

/**
 * ## `export`
 * Exports the current vocab and sends to parent
 */
export: [ vocab send ] ;

__module_hash: [ hex-hash '%top._' swap + ] ;
__load-module: [ [ dup [ ] >> '__filename' swap ; read eval export ] >> in drop ] ;
__load-and-sto-module: [ dup __load-module swap __module_hash swap ; ] ;

imported?: [ resolve __module_hash defined? ] ;

/**
 * ## `import`
 * Loads and creates a module from a file
 */
import: [
  resolve
  dup __module_hash defined?
    [ __module_hash eval ]
    [ dup __load-and-sto-module __module_hash eval ]
    choose eval
] ;

/**
 * ## `require`
 * Imports and uses a module from a file
 */
require: [
  import
  use
] ;

/**
 * ## `if-exists-load`
 * Loads a file if it exists
 */
if-exists-load: [ dup exists swap [ read eval ] >> [ ] choose eval ] ;
