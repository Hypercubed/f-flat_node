/**
 * # Core defined words
 */

// Comparisons
>: [ <=> 1 = ] ;
<: [ <=> -1 = ] ;
>=: [ < ~ ] ;
<=: [ > ~ ] ;
!=: [ = ~ ] ;

println: [ print "\n" print ] ;

'testing.ff' require
'shuffle.ff' require
'types.ff' require

map: [ * in ] ;

    [ [ 1 2 3 ] [ 2 * ] map [ 2 4 6 ] assert-equal ] 'map' test
    [ [ 1 2 3 4 ] [ 2 % 0 = ] map [ false true false true ] assert-equal ] 'map' test

ap: [ + in ] ;


    [ [ 1 2 3 ] [ * ] ap [ 1 6 ] assert-equal ] 'ap' test

appl: [ >> in ] ;

    [ 3 [ 2 * ] appl [ 6 ] assert-equal ] 'appl' test

// Objects
pluck: [ [ true ] * object swap * ] ;;

    [ { x: 1, y: 2, z: 3 } [ x: z: ] pluck { x: 1, z: 3} assert-equal ] 'pluck' test

// async
return: [ stack send ] ;;
yield: [ return suspend ] ;;
delay: [ [ sleep ] >> slip eval ] ;;