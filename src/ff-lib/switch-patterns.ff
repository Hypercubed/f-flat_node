'testing.ff' require
'types.ff' require

case: [ nullary truthy? ] ;
p-case: [ [ =~ ] >> case ] ;

->: [ case ] ;
~>: [ p-case ] ;

guard: [
  dup
  [ case ] dip
  string
  [ ' guard violation' + throw ] >>
  unless
] ;

/**
 * Calls the quotation in the first quotation whose first values yields a truthy value.
 */
switch: [
  dup empty?
  [
    popl slip        // pop and evaluate first item in list
    [ switch ] >>      // switch rest
    branch
  ] unless
] ;

  [
    0
    [
      [ dup 0 = [drop 'no apples']]
      [ dup 1 = [drop 'one apple']]
      [ true    [string ' apples' +]]
    ] switch
    'no apples' assert-equal
  ] 'switch' test

  [
    1
    [
      [ [0 = ] case [drop 'no apples']]
      [ [1 = ] case [drop 'one apple']]
      [ true        [string ' apples' +]]
    ] switch
    'one apple' assert-equal
  ] 'switch case' test

  [
    3
    [
      [ 0 p-case     [drop 'no apples']]
      [ 1 p-case     [drop 'one apple']]
      [ _ p-case     [string ' apples' +]]
    ] switch
    '3 apples' assert-equal
  ] 'switch p-case' test